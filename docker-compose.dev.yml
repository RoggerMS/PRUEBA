version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crunevo-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crunevo
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - crunevo-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d crunevo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: crunevo-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@crunevo.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
      - ./scripts/servers.json:/pgadmin4/servers.json
    ports:
      - "8080:80"
    networks:
      - crunevo-network-dev
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: crunevo-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    networks:
      - crunevo-network-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # CRUNEVO Application - Development Mode
  app:
    image: node:20-alpine
    container_name: crunevo-app-dev
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/crunevo?schema=public&sslmode=require
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=crunevo-secret-key-2024-docker
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    networks:
      - crunevo-network-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
      # Persistent volumes
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    command: >
      sh -c "
        echo 'Installing dependencies...'
        npm install
        echo 'Generating Prisma client...'
        npx prisma generate
        echo 'Starting development server...'
        npm run dev
      "
    stdin_open: true
    tty: true

volumes:
  postgres_data_dev:
    driver: local
  pgadmin_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  crunevo-network-dev:
    driver: bridge
    ipam:
      config:
        - subnet: "172.21.0.0/16"